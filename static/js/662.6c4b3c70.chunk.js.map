{"version":3,"file":"static/js/662.6c4b3c70.chunk.js","mappings":"yPAEaA,EAAcC,EAAAA,EAAAA,GAAH,4EAMXC,EAAWD,EAAAA,EAAAA,GAAH,uJAMRE,EAAUF,EAAAA,EAAAA,IAAH,iEAKPG,EAAcH,EAAAA,EAAAA,IAAH,yCAIXI,EAAWJ,EAAAA,EAAAA,EAAH,wFAMRK,EAAYL,EAAAA,EAAAA,EAAH,2H,SCiBtB,EAjCa,WACX,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,KAAKH,EAChC,GAAE,CAACJ,KAGF,iCACE,SAACP,EAAD,UACGU,EAAKK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACjB,EAAD,YACE,SAACC,EAAD,CACEiB,IACEH,EAAY,yCAC0BA,G,qmJAGxCI,IAAKH,KAEP,UAACd,EAAD,YACE,SAACC,EAAD,UAAWa,GAAc,SACzB,UAACZ,EAAD,yBAAuBa,GAAwB,cAXpCH,EADP,MAiBK,IAAhBN,EAAKY,SAAgB,yEAG3B,C,+LC1CKC,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,0FACd,oBADc,SAERD,EAAAA,EAAAA,IAAA,UADN,oBACM,oBAAiCD,IAFzB,cAEzBG,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qDAMjBC,EAAY,mCAAG,WAAMtB,GAAN,gFACpBuB,EADoB,iBACCvB,GADD,SAEHiB,EAAAA,EAAAA,IAAA,UAAaM,EAAb,oBAAiCP,IAF9B,cAEpBG,EAFoB,yBAGnBA,EAASC,MAHU,2CAAH,sDAMZd,EAAgB,mCAAG,WAAMN,GAAN,gFACxBuB,EADwB,iBACHvB,EADG,qBAEPiB,EAAAA,EAAAA,IAAA,UAAaM,EAAb,oBAAiCP,IAF1B,cAExBG,EAFwB,yBAGvBA,EAASC,KAAKjB,MAHS,2CAAH,sDAMhBqB,EAAc,mCAAG,WAAMxB,GAAN,gFACtBuB,EADsB,iBACDvB,EADC,qBAELiB,EAAAA,EAAAA,IAAA,UAAaM,EAAb,oBAAiCP,IAF5B,cAEtBG,EAFsB,yBAGrBA,EAASC,KAAKC,SAHO,2CAAH,sDAMdI,EAAgB,mCAAG,WAAMC,GAAN,gFACxBH,EADwB,8BACUG,EADV,iCAEPT,EAAAA,EAAAA,IAAA,UAAaM,EAAb,oBAAiCP,IAF1B,cAExBG,EAFwB,yBAGvBA,EAASC,KAAKC,SAHS,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/movie-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc((100% - 140px) / 8);\n  background-color: #ffffff;\n  box-shadow: 5px 3px 18px 0px rgba(64, 61, 61, 0.75);\n`;\n\nexport const CastImg = styled.img`\n  width: 155px;\n  max-height: 232.5px;\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 8px;\n`;\n\nexport const CastName = styled.p`\n  font-size: 14px;\n  margin-bottom: 8px;\n  font-weight: 600;\n`;\n\nexport const CastTitle = styled.p`\n  font-size: 12px;\n  margin: 0px;\n  max-width: 139px;\n  overflow: hidden;\n  max-height: 14px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCastbyId } from 'service/movie-api';\nimport NoPhoto from 'images/no-photo.png';\nimport {\n  CastImg,\n  CastItem,\n  CastWrapper,\n  CastTitle,\n  CastName,\n  TextWrapper,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCastbyId(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <>\n      <CastWrapper>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <CastItem key={id}>\n            <CastImg\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : NoPhoto\n              }\n              alt={name}\n            />\n            <TextWrapper>\n              <CastName>{name ? name : 'N/a'}</CastName>\n              <CastTitle>Character: {character ? character : 'n/a'}</CastTitle>\n            </TextWrapper>\n          </CastItem>\n        ))}\n      </CastWrapper>\n      {cast.length === 0 && <p>We don't have any information about actors.</p>}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '185de76fc9040ef87a50d3720e8d34c5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const endpoint = '/trending/all/day';\n  const response = await axios.get(`${endpoint}?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const endpoint = `/movie/${movieId}`;\n  const response = await axios.get(`${endpoint}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getMovieCastbyId = async movieId => {\n  const endpoint = `/movie/${movieId}/credits`;\n  const response = await axios.get(`${endpoint}?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviewsbyId = async movieId => {\n  const endpoint = `/movie/${movieId}/reviews`;\n  const response = await axios.get(`${endpoint}?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const endpoint = `/search/movie?query=${query}&include_adult=false`;\n  const response = await axios.get(`${endpoint}&api_key=${KEY}`);\n  return response.data.results;\n};\n"],"names":["CastWrapper","styled","CastItem","CastImg","TextWrapper","CastName","CastTitle","movieId","useParams","useState","cast","setCast","useEffect","getMovieCastbyId","then","map","id","profile_path","name","character","src","alt","length","KEY","axios","getTrendingMovies","response","data","results","getMovieById","endpoint","getReviewsbyId","getMoviesByQuery","query"],"sourceRoot":""}